<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Vue历练之路二---Vue的基础语法</title>
    <link href="/2020/08/16/Vue%E5%8E%86%E7%BB%83%E4%B9%8B%E8%B7%AF%E4%BA%8C---Vue%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    <url>/2020/08/16/Vue%E5%8E%86%E7%BB%83%E4%B9%8B%E8%B7%AF%E4%BA%8C---Vue%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="Vue起步"><a href="#Vue起步" class="headerlink" title="Vue起步"></a>Vue起步</h2><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span>Hello,Vue<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">    <span class="hljs-keyword">var</span> app = <span class="hljs-keyword">new</span> Vue(&#123;</span><span class="javascript">        el: <span class="hljs-string">&#x27;#app&#x27;</span>,</span>        data:&#123;&#125;,        ...    &#125;);<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p><code>el：</code>el指定的容器会交由<code>Vue</code>进行管理，<code>Vue</code>内部会解析容器中的一些固定语法，完成数据的展示。</p><p><code>data：</code>data用于指定数据</p><p>在<code>Vue</code>对象中，我们还可以指定很多的内容，后续再做补充。</p><h2 id="Vue语法"><a href="#Vue语法" class="headerlink" title="Vue语法"></a>Vue语法</h2><h3 id="Mustache语法"><a href="#Mustache语法" class="headerlink" title="Mustache语法"></a>Mustache语法</h3><p><code>&#123;&#123;&#125;&#125;</code>称之为Mustache语法，它可以将vue中定义的数据展示到标签内（标签之间的内容，并不是标签的属性）。</p><p>上述案例可改写为：</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">    <span class="hljs-keyword">var</span> app = <span class="hljs-keyword">new</span> Vue(&#123;</span><span class="javascript">        el: <span class="hljs-string">&#x27;#app&#x27;</span>,</span>        data:&#123;<span class="javascript">            message: <span class="hljs-string">&#x27;Hello,Vue&#x27;</span></span>        &#125;    &#125;);<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p>效果:</p><p><img src="D:\items\blog\public\img\vue2-1.jpg"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue历练之路一---Vue介绍、安装及项目初始化</title>
    <link href="/2020/08/16/Vue%E5%8E%86%E7%BB%83%E4%B9%8B%E8%B7%AF%E4%B8%80---Vue%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
    <url>/2020/08/16/Vue%E5%8E%86%E7%BB%83%E4%B9%8B%E8%B7%AF%E4%B8%80---Vue%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h2 id="认识Vue"><a href="#认识Vue" class="headerlink" title="认识Vue"></a>认识Vue</h2><p>​    <code>Vue</code>(读音 /vjuː/，类似于 <strong>view</strong>) 是一套用于构建用户界面的<strong>渐进式框架</strong>。与其它大型框架不同的是，<code>Vue</code> 被设计为可以自底向上逐层应用。<code>Vue</code> 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与<a href="https://cn.vuejs.org/v2/guide/single-file-components.html">现代化的工具链</a>以及各种<a href="https://github.com/vuejs/awesome-vue#libraries--plugins">支持类库</a>结合使用时，<code>Vue</code> 也完全能够为复杂的单页应用提供驱动。</p><h3 id="渐进式框架"><a href="#渐进式框架" class="headerlink" title="渐进式框架"></a>渐进式框架</h3><p>​    渐进式框架就是主张最少，它具有比较强的包容性。例如一个项目使用的是<code>Jquery</code>的框架，在使用<code>Vue</code>升级时，不必一次性将所有已有的项目全部重做，只需要自底向上慢慢去替换，就可以完成迭代工作。</p><h3 id="MVVM模型"><a href="#MVVM模型" class="headerlink" title="MVVM模型"></a>MVVM模型</h3><p>​    MVVM是Model（M，数据层），View（V，视图层），ViewModel（VM，业务逻辑层）的统称。MVVM 将数据双向绑定（data-binding）作为核心思想，View 和 Model 之间没有联系，它们通过 ViewModel 这个桥梁进行交互。数据层与视图层之间的交互是相互的。数据的变化会自动同步到视图中，反之，视图的变化也会自动同步到数据上。</p><h2 id="Vue的安装"><a href="#Vue的安装" class="headerlink" title="Vue的安装"></a>Vue的安装</h2><p>Vue 2.x<code>和</code>Vue 3.x`安装方式较为不同。</p><h3 id="Vue-2-x版本安装"><a href="#Vue-2-x版本安装" class="headerlink" title="Vue 2.x版本安装"></a><code>Vue 2.x</code>版本安装</h3><pre><code class="hljs shell">npm install vue-cli -g  -- 全局安装Vue 2.xvue --version           -- 查看Vue安装版本,出现版本提示则表示安装成功</code></pre><h3 id="Vue-2-x项目创建"><a href="#Vue-2-x项目创建" class="headerlink" title="Vue 2.x项目创建"></a><code>Vue 2.x</code>项目创建</h3><pre><code class="hljs shell">-- 创建项目vue init webpack 项目名称-- 出现如下提示Project name (项目)                     -- 输入项目名称 回车默认为vue init 时的项目名Project description A Vue.js project    -- 输入项目描述Author&lt;&gt;                                -- 输入作者Vue build standalone                    -- 需要不需要安装编译器，我选择需要安装Install vue-router? Yes                 -- 是否使用vue-router Y为使用N不使用Use ESLint to lint your code? (Y/n)     -- 是否使用ESLint语法检查 Set up unit tests No                    -- 是否使用unit测试 我没有用到选的是不选择Setup e2e tests with Nightwatch? No     -- 是否使用e2e测试 我也没有用到选择的不使用-- 启动项目cd 项目npm run dev</code></pre><h3 id="Vue-3-x版本安装"><a href="#Vue-3-x版本安装" class="headerlink" title="Vue 3.x版本安装"></a><code>Vue 3.x</code>版本安装</h3><pre><code class="hljs shell">npm install -g @vue/cli  -- 全局安装Vue 3.xvue --version            -- 查看Vue安装版本,出现版本提示则表示安装成功</code></pre><h3 id="Vue-3-x项目创建"><a href="#Vue-3-x项目创建" class="headerlink" title="Vue 3.x项目创建"></a><code>Vue 3.x</code>项目创建</h3><pre><code class="hljs shell">-- 创建项目vue create 项目名称-- 出现如下提示Please pick a preset: Manually select featuresCheck the features needed for your project: Babel, Router, Vuex, CSS Pre-processors, LinterUse history mode for router? (Requires proper server setup for index fallback in production) NoPick a CSS pre-processor (PostCSS, Autoprefixer and CSS Modules are supported by default): LessPick a linter / formatter config: PrettierPick additional lint features: Lint on saveWhere do you prefer placing config for Babel, ESLint, etc.? In package.jsonSave this as a preset for future projects? (y/N) n-- 启动项目cd 项目npm run dev</code></pre><p>​    <code>Vue 3.x</code>提供了图形化界面的项目搭建方式，可以使用<code>vue ui</code>命令进入vue管理界面进行项目的创建。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
